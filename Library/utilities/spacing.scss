@use "Library/settings/variables" as *;
$mobile: false !default;
$internal: false !default;
// -----------------------------------------------------------------------------
// =Spacing
// -----------------------------------------------------------------------------
// Classname key
//   m = margin
//   p = padding
//   t = top
//   r = right
//   b = buttom
//   l = left
//   x = x-axis (left/right)
//   y = y-axis (top/bottom)
//   n = negative value

@function calcSpacing($num) {
    @return ($spacing-1 * $num);
}
// Margin
@for $i from 0 through $max-spacing {
    $props: ("margin": "m");

    @each $prop, $abbr in $props {
        $sides: (null:null, t:"-top", r:"-right", b:"-bottom", l:"-left");

        @each $clip,$side in $sides {
            .#{$abbr}#{$clip}#{$i} {
                #{$prop}#{$side}: calcSpacing($i);
            }
        }
        .#{$abbr}y#{$i} { #{$prop}-top: calcSpacing($i); #{$prop}-bottom: calcSpacing($i); }
        .#{$abbr}x#{$i} { #{$prop}-left: calcSpacing($i); #{$prop}-right: calcSpacing($i); }
    }
}
// These values are 1/2 of 1em == 0.5em
$sides: (null:null, t:"-top", r:"-right", b:"-bottom", l:"-left");

@each $abbr, $side in $sides {
    .m#{$abbr}-5 {
        margin#{$side}: ($spacing-1 / 2)
    }
}
.my-5 { margin-top:    ($spacing-1 / 2); margin-bottom: ($spacing-1 / 2) }
.mx-5 { margin-left:   ($spacing-1 / 2); margin-right: ($spacing-1 / 2) }

// .mxn-5 { margin-left: -($spacing-1 / 2); margin-right: -($spacing-1 / 2); }
// .mxn1 { margin-left: -$spacing-1; margin-right: -$spacing-1; }
// .mxn2 { margin-left: -$spacing-2; margin-right: -$spacing-2; }
// .mxn3 { margin-left: -$spacing-3; margin-right: -$spacing-3; }
// .mxn4 { margin-left: -$spacing-4; margin-right: -$spacing-4; }

.mx-auto { margin-left: auto; margin-right: auto; }
.my-auto { margin-top: auto; margin-bottom: auto; }
.ml-auto { margin-left: auto }
.mr-auto { margin-right: auto }
.mt-auto { margin-top: auto }
.mb-auto { margin-bottom: auto }

// END Margin

// Padding
@for $i from 0 through $max-spacing {
    $props: ("padding": "p");

    @each $prop,$abbr in $props {
        $sides: (null:null, t:"-top", r:"-right", b:"-bottom", l:"-left");

        @each $clip,$side in $sides {
            .#{$abbr}#{$clip}#{$i} {
                #{$prop}#{$side}: calcSpacing($i);
            }
        }

        .#{$abbr}y#{$i} {
            #{$prop}-top: calcSpacing($i); #{$prop}-bottom: calcSpacing($i);
        }

        .#{$abbr}x#{$i} {
            #{$prop}-left: calcSpacing($i); #{$prop}-right: calcSpacing($i);
        }
    }
}
// These values are 1/2 of 1em == 0.5em
$sides: (null:null, t:"-top", r:"-right", b:"-bottom", l:"-left");

@each $abbr,$side in $sides {
    .p#{$abbr}-5 {
        padding#{$side}: ($spacing-1 / 2)
    }
}
.py-5 { padding-top:    ($spacing-1 / 2); padding-bottom: ($spacing-1 / 2) }
.px-5 { padding-left:   ($spacing-1 / 2); padding-right:  ($spacing-1 / 2) }

// END Padding

// -----------------------------------------------------------------------------
// =Media Queries
// -----------------------------------------------------------------------------
@if not $mobile {

    @if $area-screen-small {
        /*! min-width: #{$screen-sm-px} */
        @media all and (min-width:$screen-sm-em) {
            $suffix: "-sm";
            // Margin
            @for $i from 0 through $max-spacing {
                $props: ("margin": "m");

                @each $prop,$abbr in $props {
                    $sides: (null:null, t:"-top", r:"-right", b:"-bottom", l:"-left");

                    @each $clip,$side in $sides {
                        .#{$abbr}#{$clip}#{$i}#{$suffix} {
                            #{$prop}#{$side}: calcSpacing($i);
                        }
                    }

                    .#{$abbr}y#{$i}#{$suffix} {
                        #{$prop}-top: calcSpacing($i);
                        #{$prop}-bottom: calcSpacing($i);
                    }

                    .#{$abbr}x#{$i}#{$suffix} {
                        #{$prop}-left: calcSpacing($i);
                        #{$prop}-right: calcSpacing($i);
                    }
                }
            }
            .mx-auto#{$suffix} { margin-left: auto; margin-right: auto; }
            .my-auto#{$suffix} { margin-top: auto; margin-bottom: auto; }
            .ml-auto#{$suffix} { margin-left: auto }
            .mr-auto#{$suffix} { margin-right: auto }
            .mt-auto#{$suffix} { margin-top: auto }
            .mb-auto#{$suffix} { margin-bottom: auto }
            // Padding
            @for $i from 0 through $max-spacing {
                $props: ("padding": "p");

                @each $prop,$abbr in $props {
                    $sides: (null:null, t:"-top", r:"-right", b:"-bottom", l:"-left");

                    @each $clip,$side in $sides {
                        .#{$abbr}#{$clip}#{$i}#{$suffix} {
                            #{$prop}#{$side}: calcSpacing($i);
                        }
                    }

                    .#{$abbr}y#{$i}#{$suffix} {
                        #{$prop}-top: calcSpacing($i);
                        #{$prop}-bottom: calcSpacing($i);
                    }

                    .#{$abbr}x#{$i}#{$suffix} {
                        #{$prop}-left: calcSpacing($i);
                        #{$prop}-right: calcSpacing($i);
                    }
                }
            }
        }
    }
    @if $area-screen-medium {
        /*! min-width: #{$screen-md-px} */
        @media all and (min-width:$screen-md-em) {
            $suffix: "-md";
            // Margin
            @for $i from 0 through $max-spacing {
                $props: ("margin": "m");

                @each $prop,$abbr in $props {
                    $sides: (null:null, t:"-top", r:"-right", b:"-bottom", l:"-left");

                    @each $clip,$side in $sides {
                        .#{$abbr}#{$clip}#{$i}#{$suffix} {
                            #{$prop}#{$side}: calcSpacing($i);
                        }
                    }

                    .#{$abbr}y#{$i}#{$suffix} {
                        #{$prop}-top: calcSpacing($i);
                        #{$prop}-bottom: calcSpacing($i);
                    }

                    .#{$abbr}x#{$i}#{$suffix} {
                        #{$prop}-left: calcSpacing($i);
                        #{$prop}-right: calcSpacing($i);
                    }
                }
            }
            .mx-auto#{$suffix} { margin-left: auto; margin-right: auto; }
            .my-auto#{$suffix} { margin-top: auto; margin-bottom: auto; }
            .ml-auto#{$suffix} { margin-left: auto }
            .mr-auto#{$suffix} { margin-right: auto }
            .mt-auto#{$suffix} { margin-top: auto }
            .mb-auto#{$suffix} { margin-bottom: auto }

            // Padding
            @for $i from 0 through $max-spacing {
                $props: ("padding": "p");

                @each $prop,$abbr in $props {
                    $sides: (null:null, t:"-top", r:"-right", b:"-bottom", l:"-left");

                    @each $clip,$side in $sides {
                        .#{$abbr}#{$clip}#{$i}#{$suffix} {
                            #{$prop}#{$side}: calcSpacing($i);
                        }
                    }

                    .#{$abbr}y#{$i}#{$suffix} {
                        #{$prop}-top: calcSpacing($i);
                        #{$prop}-bottom: calcSpacing($i);
                    }

                    .#{$abbr}x#{$i}#{$suffix} {
                        #{$prop}-left: calcSpacing($i);
                        #{$prop}-right: calcSpacing($i);
                    }
                }
            }
        }
    }
    @if $area-screen-large {
        /*! min-width: #{$screen-lg-px} */
        @media all and (min-width: $screen-lg-em) {
            $suffix: "-lg";
            // Margin
            @for $i from 0 through $max-spacing {
                $props: ("margin": "m");

                @each $prop,$abbr in $props {
                    $sides: (null:null, t:"-top", r:"-right", b:"-bottom", l:"-left");

                    @each $clip,$side in $sides {
                        .#{$abbr}#{$clip}#{$i}#{$suffix} {
                            #{$prop}#{$side}: calcSpacing($i);
                        }
                    }

                    .#{$abbr}y#{$i}#{$suffix} {
                        #{$prop}-top: calcSpacing($i);
                        #{$prop}-bottom: calcSpacing($i);
                    }

                    .#{$abbr}x#{$i}#{$suffix} {
                        #{$prop}-left: calcSpacing($i);
                        #{$prop}-right: calcSpacing($i);
                    }
                }
            }
            .mx-auto#{$suffix} { margin-left: auto; margin-right: auto; }
            .my-auto#{$suffix} { margin-top: auto; margin-bottom: auto; }
            .ml-auto#{$suffix} { margin-left: auto }
            .mr-auto#{$suffix} { margin-right: auto }
            .mt-auto#{$suffix} { margin-top: auto }
            .mb-auto#{$suffix} { margin-bottom: auto }
            
            // Padding
            @for $i from 0 through $max-spacing {
                $props: ("padding": "p");

                @each $prop,$abbr in $props {
                    $sides: (null:null, t:"-top", r:"-right", b:"-bottom", l:"-left");

                    @each $clip,$side in $sides {
                        .#{$abbr}#{$clip}#{$i}#{$suffix} {
                            #{$prop}#{$side}: calcSpacing($i);
                        }
                    }

                    .#{$abbr}y#{$i}#{$suffix} {
                        #{$prop}-top: calcSpacing($i);
                        #{$prop}-bottom: calcSpacing($i);
                    }

                    .#{$abbr}x#{$i}#{$suffix} {
                        #{$prop}-left: calcSpacing($i);
                        #{$prop}-right: calcSpacing($i);
                    }
                }
            }
        }
    }
    @if $area-screen-xl {

        /*! min-width: #{$screen-xl-px} */
        @media all and (min-width: $screen-xl-em) {
            $suffix: "-xl";

            // Margin
            @for $i from 0 through $max-spacing {
                $props: ("margin": "m");

                @each $prop,
                $abbr in $props {
                    $sides: (null:null, t:"-top", r:"-right", b:"-bottom", l:"-left");

                    @each $clip,$side in $sides {
                        .#{$abbr}#{$clip}#{$i}#{$suffix} {
                            #{$prop}#{$side}: calcSpacing($i);
                        }
                    }

                    .#{$abbr}y#{$i}#{$suffix} {
                        #{$prop}-top: calcSpacing($i);
                        #{$prop}-bottom: calcSpacing($i);
                    }

                    .#{$abbr}x#{$i}#{$suffix} {
                        #{$prop}-left: calcSpacing($i);
                        #{$prop}-right: calcSpacing($i);
                    }
                }
            }

            .mx-auto#{$suffix} { margin-left: auto; margin-right: auto; }
            .my-auto#{$suffix} { margin-top: auto; margin-bottom: auto; }
            .ml-auto#{$suffix} { margin-left: auto }
            .mr-auto#{$suffix} { margin-right: auto }
            .mt-auto#{$suffix} { margin-top: auto }
            .mb-auto#{$suffix} { margin-bottom: auto }

            // Padding
            @for $i from 0 through $max-spacing {
                $props: ("padding": "p");

                @each $prop,
                $abbr in $props {
                    $sides: (null:null, t:"-top", r:"-right", b:"-bottom", l:"-left");

                    @each $clip,
                    $side in $sides {
                        .#{$abbr}#{$clip}#{$i}#{$suffix} {
                            #{$prop}#{$side}: calcSpacing($i);
                        }
                    }

                    .#{$abbr}y#{$i}#{$suffix} {
                        #{$prop}-top: calcSpacing($i);
                        #{$prop}-bottom: calcSpacing($i);
                    }

                    .#{$abbr}x#{$i}#{$suffix} {
                        #{$prop}-left: calcSpacing($i);
                        #{$prop}-right: calcSpacing($i);
                    }
                }
            }
        }
    }
} //End desktop