@use "sass:math";
@use "Library/settings/variables"as *;
@use "Library/tools/mixins"as *;
@use "Library/tools/flex"as *;
$mobile: false !default;
$internal: false !default;
$lang: false !default;
// -----------------------------------------------------------------------------
/*! =CSS Flex Grid layout */
// -----------------------------------------------------------------------------

/* EXAMPLE

<div class="row">
    <div class="col-8 col-4-md flex-col flex-c-center">
        <!-- content -->
    </div>
    <div class="col-8 col-4-md flex-col flex-c-center">
        <!-- content -->
    </div>
    <div class="col-8 col-4-md flex-col flex-c-center">
        <!-- content -->
    </div>
    <div class="col-8 col-4-md flex-col flex-c-center">
        <!-- content -->
    </div>
</div>

*/
$grid-columns: [];

@for $i from 1 through $max-columns {
    $grid-columns: append($grid-columns,$i,$separator: comma);
    // @debug $grid-columns;
    // @debug $i;
}

@each $col in $grid-columns {
    .row {
        $col-width: (100% / $col);
        width: 100%;
        @include flex-row;
        @include flex-wrap;

        @for $i from 1 through $col {
            > .col-#{$i} {
                width: ($col-width * $i);
                padding: ($column-gutter / 2);
            }
        }
    }
}

@if not $mobile {

    /* Small devices (tablets, #{$screen-sm-px} and up) */
    @media all and (min-width:$screen-sm-em) {
        $suffix: '-sm';
    
        @each $col in $grid-columns {
            .row#{$suffix} {
                $col-width: (100% / $col);
                // @debug $col-width;
    
                @for $i from 1 through $col {
                    > .col-#{$i}#{$suffix} {
                        width: ($col-width * $i);
                    }
                }
            }
        }
    }
    
    /* Medium devices (desktops, #{$screen-lg-px} and up) */
    @media all and (min-width:$screen-md-em) {
        $suffix: '-md';
    
        @each $col in $grid-columns {
            .row#{$suffix} {
                $col-width: (100% / $col);
                // @debug $col-width;
    
                @for $i from 1 through $col {
                    > .col-#{$i}#{$suffix} {
                        width: ($col-width * $i);
                    }
                }
            }
        }
    
    }
    
    /* Large devices (large desktops, #{$screen-lg-px} and up) */
    @media all and (min-width: $screen-lg-em) {
        $suffix: '-lg';
    
        @each $col in $grid-columns {
            .row#{$suffix} {
                $col-width: (100% / $col);
                // @debug $col-width;
    
                @for $i from 1 through $col {
                    > .col-#{$i}#{$suffix} {
                        width: ($col-width * $i);
                    }
                }
            }
        }
    }
    
}
